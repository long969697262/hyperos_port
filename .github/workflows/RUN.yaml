name: Build-CI

on:
  workflow_dispatch:
    inputs:
      BaseROMLink:
        description: 'https://bn.d.miui.com/OS1.0.5.0.TJACNXM/miui_CMI_OS1.0.5.0.TJACNXM_64cdfa3fe5_13.0.zip'
        required: true
      PortROMLink:
        description: 'https://bn.d.miui.com/OS2.0.20.0.VOBCNXM/haotian-ota_full-OS2.0.20.0.VOBCNXM-user-15.0-08656db639.zip'
        required: true
permissions: write-all

jobs:
  BuildROM:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4

      - name: Space cleanup and Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          df -h
          sudo ./setup.sh
          sudo cp -r ../hyperos_port /mnt/Project
#          docker rmi `docker images -q`
#          sudo -E rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
#          sudo -E apt-mark hold grub-efi-amd64-signed
#          sudo -E apt -y purge azure-cli* docker* ghc* zulu* llvm* firefox google* dotnet* powershell* openjdk* mysql* php* mongodb* dotnet* snap*
#          sudo -E apt -y autoremove --purge
#          sudo -E apt clean
#          sudo apt autoclean
#          sudo rm /var/log/*.log
#          sudo rm -rf /tmp/*
#          df -h

      - name: Build
        working-directory: /mnt/Project
        run: sudo ./port.sh ${{ inputs.BaseROMLink }} ${{ inputs.PortROMLink }}


      - name: Get ROM folder name
        id: get_folder_name
        working-directory: /mnt/Project/out
        run: |
          zip_file=$(ls *.zip)
          echo "::set-output name=zip_file::$zip_file"

      - name: Split ZIP into 1.5GB parts
        working-directory: /mnt/Project/out
        run: |
          zip -s 1536m "${{ steps.get_folder_name.outputs.zip_file }}_Part.zip" "${{ steps.get_folder_name.outputs.zip_file }}"
          rm -rf ${{ steps.get_folder_name.outputs.zip_file }}
          ls

      - name: Create Release ðŸ“š
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_id }}
          release_name: ${{ github.run_id }}
          draft: false
          prerelease: false

      - name: Upload Release AssetsðŸ“¦
        id: upload_release_assets_1
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: /mnt/Project/out/${{ steps.get_folder_name.outputs.zip_file }}_Part.zip
          asset_name: ${{ steps.get_folder_name.outputs.zip_file }}.zip
          asset_content_type: application/zip

      - name: Upload Release AssetsðŸ“¦
        id: upload_release_assets_2
        continue-on-error: true
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: /mnt/Project/out/${{ steps.get_folder_name.outputs.zip_file }}_Part.z01
          asset_name: ${{ steps.get_folder_name.outputs.zip_file }}.z01
          asset_content_type: application/zip

      - name: Upload Release AssetsðŸ“¦
        id: upload_release_assets_3
        continue-on-error: true
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: /mnt/Project/out/${{ steps.get_folder_name.outputs.zip_file }}_Part.z02
          asset_name: ${{ steps.get_folder_name.outputs.zip_file }}.z02
          asset_content_type: application/zip

      - name: Upload Release AssetsðŸ“¦
        id: upload_release_assets_4
        continue-on-error: true
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: /mnt/Project/out/${{ steps.get_folder_name.outputs.zip_file }}_Part.z03
          asset_name: ${{ steps.get_folder_name.outputs.zip_file }}.z03
          asset_content_type: application/zip
